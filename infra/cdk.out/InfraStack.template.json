{
 "Resources": {
  "PsychiatristsTableCC16F1E7": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "PK",
      "AttributeType": "S"
     },
     {
      "AttributeName": "SK",
      "AttributeType": "S"
     },
     {
      "AttributeName": "GSI1PK",
      "AttributeType": "S"
     },
     {
      "AttributeName": "GSI1SK",
      "AttributeType": "S"
     },
     {
      "AttributeName": "GSI2PK",
      "AttributeType": "S"
     },
     {
      "AttributeName": "GSI2SK",
      "AttributeType": "S"
     }
    ],
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "GSI1",
      "KeySchema": [
       {
        "AttributeName": "GSI1PK",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "GSI1SK",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      },
      "ProvisionedThroughput": {
       "ReadCapacityUnits": 5,
       "WriteCapacityUnits": 5
      }
     },
     {
      "IndexName": "GSI2",
      "KeySchema": [
       {
        "AttributeName": "GSI2PK",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "GSI2SK",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      },
      "ProvisionedThroughput": {
       "ReadCapacityUnits": 5,
       "WriteCapacityUnits": 5
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "PK",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "SK",
      "KeyType": "RANGE"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 1,
     "WriteCapacityUnits": 1
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "InfraStack/PsychiatristsTable/Resource"
   }
  },
  "ListPsychiatristsLambdaServiceRole4CD950B4": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/ListPsychiatristsLambda/ServiceRole/Resource"
   }
  },
  "ListPsychiatristsLambdaServiceRoleDefaultPolicy3C9BC4BE": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PsychiatristsTableCC16F1E7",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PsychiatristsTableCC16F1E7",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ListPsychiatristsLambdaServiceRoleDefaultPolicy3C9BC4BE",
    "Roles": [
     {
      "Ref": "ListPsychiatristsLambdaServiceRole4CD950B4"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/ListPsychiatristsLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ListPsychiatristsLambda38DC8D6B": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "21c1da38deabdb408ab4bf499427947c40e5668dc22582cb5930d201e890a069.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "PsychiatristsTableCC16F1E7"
      }
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "ListPsychiatristsLambdaServiceRole4CD950B4",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x"
   },
   "DependsOn": [
    "ListPsychiatristsLambdaServiceRoleDefaultPolicy3C9BC4BE",
    "ListPsychiatristsLambdaServiceRole4CD950B4"
   ],
   "Metadata": {
    "aws:cdk:path": "InfraStack/ListPsychiatristsLambda/Resource",
    "aws:asset:path": "asset.21c1da38deabdb408ab4bf499427947c40e5668dc22582cb5930d201e890a069",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "ListPsychiatristsLambdaLogGroup6C4DB81D": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "ListPsychiatristsLambda38DC8D6B"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "InfraStack/ListPsychiatristsLambda/LogGroup/Resource"
   }
  },
  "CreatePsychiatristLambdaServiceRoleF9DF2411": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/CreatePsychiatristLambda/ServiceRole/Resource"
   }
  },
  "CreatePsychiatristLambdaServiceRoleDefaultPolicy5E8C088B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchWriteItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PsychiatristsTableCC16F1E7",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PsychiatristsTableCC16F1E7",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CreatePsychiatristLambdaServiceRoleDefaultPolicy5E8C088B",
    "Roles": [
     {
      "Ref": "CreatePsychiatristLambdaServiceRoleF9DF2411"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/CreatePsychiatristLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CreatePsychiatristLambdaB7BEEAAD": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "5925e1cba325076d98da775ab586765d2fba3d23a2d3284802730ebd2dc1616b.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "PsychiatristsTableCC16F1E7"
      }
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CreatePsychiatristLambdaServiceRoleF9DF2411",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x"
   },
   "DependsOn": [
    "CreatePsychiatristLambdaServiceRoleDefaultPolicy5E8C088B",
    "CreatePsychiatristLambdaServiceRoleF9DF2411"
   ],
   "Metadata": {
    "aws:cdk:path": "InfraStack/CreatePsychiatristLambda/Resource",
    "aws:asset:path": "asset.5925e1cba325076d98da775ab586765d2fba3d23a2d3284802730ebd2dc1616b",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "CreatePsychiatristLambdaLogGroup5806379F": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "CreatePsychiatristLambdaB7BEEAAD"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "InfraStack/CreatePsychiatristLambda/LogGroup/Resource"
   }
  },
  "AvailabilityLambdaServiceRole528DEF31": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/AvailabilityLambda/ServiceRole/Resource"
   }
  },
  "AvailabilityLambdaServiceRoleDefaultPolicy45EC1647": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PsychiatristsTableCC16F1E7",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PsychiatristsTableCC16F1E7",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AvailabilityLambdaServiceRoleDefaultPolicy45EC1647",
    "Roles": [
     {
      "Ref": "AvailabilityLambdaServiceRole528DEF31"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/AvailabilityLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "AvailabilityLambda98535654": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "61cd52f70237a766055c054e9b28acb25564103b67919535bf2d323b3e18d19c.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "PsychiatristsTableCC16F1E7"
      }
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "AvailabilityLambdaServiceRole528DEF31",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x"
   },
   "DependsOn": [
    "AvailabilityLambdaServiceRoleDefaultPolicy45EC1647",
    "AvailabilityLambdaServiceRole528DEF31"
   ],
   "Metadata": {
    "aws:cdk:path": "InfraStack/AvailabilityLambda/Resource",
    "aws:asset:path": "asset.61cd52f70237a766055c054e9b28acb25564103b67919535bf2d323b3e18d19c",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "AvailabilityLambdaLogGroupF35C99A9": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "AvailabilityLambda98535654"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "InfraStack/AvailabilityLambda/LogGroup/Resource"
   }
  },
  "CreateAppointmentLambdaServiceRoleFF504CCD": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/CreateAppointmentLambda/ServiceRole/Resource"
   }
  },
  "CreateAppointmentLambdaServiceRoleDefaultPolicy330E772B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PsychiatristsTableCC16F1E7",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PsychiatristsTableCC16F1E7",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CreateAppointmentLambdaServiceRoleDefaultPolicy330E772B",
    "Roles": [
     {
      "Ref": "CreateAppointmentLambdaServiceRoleFF504CCD"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/CreateAppointmentLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CreateAppointmentLambdaF2AD135A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "0e302dfceaf278674d4327c5f6509fa6218879f12fbb02d4e8133d2b3a88651c.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "PsychiatristsTableCC16F1E7"
      }
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CreateAppointmentLambdaServiceRoleFF504CCD",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x"
   },
   "DependsOn": [
    "CreateAppointmentLambdaServiceRoleDefaultPolicy330E772B",
    "CreateAppointmentLambdaServiceRoleFF504CCD"
   ],
   "Metadata": {
    "aws:cdk:path": "InfraStack/CreateAppointmentLambda/Resource",
    "aws:asset:path": "asset.0e302dfceaf278674d4327c5f6509fa6218879f12fbb02d4e8133d2b3a88651c",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "CreateAppointmentLambdaLogGroup66B904CE": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "CreateAppointmentLambdaF2AD135A"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "InfraStack/CreateAppointmentLambda/LogGroup/Resource"
   }
  },
  "ApproveAppointmentLambdaServiceRole81C44B9B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/ApproveAppointmentLambda/ServiceRole/Resource"
   }
  },
  "ApproveAppointmentLambdaServiceRoleDefaultPolicy64D99482": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PsychiatristsTableCC16F1E7",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PsychiatristsTableCC16F1E7",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ApproveAppointmentLambdaServiceRoleDefaultPolicy64D99482",
    "Roles": [
     {
      "Ref": "ApproveAppointmentLambdaServiceRole81C44B9B"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/ApproveAppointmentLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ApproveAppointmentLambdaCE33AABA": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "a7e0fdf99ef3498b8d489d77ca651329bc0cbd95cb189bcbdcc655f1a6128562.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "PsychiatristsTableCC16F1E7"
      }
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "ApproveAppointmentLambdaServiceRole81C44B9B",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x"
   },
   "DependsOn": [
    "ApproveAppointmentLambdaServiceRoleDefaultPolicy64D99482",
    "ApproveAppointmentLambdaServiceRole81C44B9B"
   ],
   "Metadata": {
    "aws:cdk:path": "InfraStack/ApproveAppointmentLambda/Resource",
    "aws:asset:path": "asset.a7e0fdf99ef3498b8d489d77ca651329bc0cbd95cb189bcbdcc655f1a6128562",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "ApproveAppointmentLambdaLogGroupCA7761F4": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "ApproveAppointmentLambdaCE33AABA"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "InfraStack/ApproveAppointmentLambda/LogGroup/Resource"
   }
  },
  "RejectAppointmentLambdaServiceRole21B16BCE": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/RejectAppointmentLambda/ServiceRole/Resource"
   }
  },
  "RejectAppointmentLambdaServiceRoleDefaultPolicyFE7E4BAB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PsychiatristsTableCC16F1E7",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PsychiatristsTableCC16F1E7",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "RejectAppointmentLambdaServiceRoleDefaultPolicyFE7E4BAB",
    "Roles": [
     {
      "Ref": "RejectAppointmentLambdaServiceRole21B16BCE"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/RejectAppointmentLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "RejectAppointmentLambdaDB5D26B0": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "0988cc2d227ab1d73e63b4c4fbb9f0b119c59b271622b3fe93b433d38bbd4e36.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "PsychiatristsTableCC16F1E7"
      }
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "RejectAppointmentLambdaServiceRole21B16BCE",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x"
   },
   "DependsOn": [
    "RejectAppointmentLambdaServiceRoleDefaultPolicyFE7E4BAB",
    "RejectAppointmentLambdaServiceRole21B16BCE"
   ],
   "Metadata": {
    "aws:cdk:path": "InfraStack/RejectAppointmentLambda/Resource",
    "aws:asset:path": "asset.0988cc2d227ab1d73e63b4c4fbb9f0b119c59b271622b3fe93b433d38bbd4e36",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "RejectAppointmentLambdaLogGroup7F6FE937": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "RejectAppointmentLambdaDB5D26B0"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "InfraStack/RejectAppointmentLambda/LogGroup/Resource"
   }
  },
  "ListAppointmentsLambdaServiceRole96C62172": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/ListAppointmentsLambda/ServiceRole/Resource"
   }
  },
  "ListAppointmentsLambdaServiceRoleDefaultPolicy28E20E41": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PsychiatristsTableCC16F1E7",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PsychiatristsTableCC16F1E7",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ListAppointmentsLambdaServiceRoleDefaultPolicy28E20E41",
    "Roles": [
     {
      "Ref": "ListAppointmentsLambdaServiceRole96C62172"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/ListAppointmentsLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ListAppointmentsLambda0A2CE31A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "27e8e0cb49998792b50ce4ec1a17809cecdf52a4fdd62941d4009842747b024c.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "PsychiatristsTableCC16F1E7"
      }
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "ListAppointmentsLambdaServiceRole96C62172",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x"
   },
   "DependsOn": [
    "ListAppointmentsLambdaServiceRoleDefaultPolicy28E20E41",
    "ListAppointmentsLambdaServiceRole96C62172"
   ],
   "Metadata": {
    "aws:cdk:path": "InfraStack/ListAppointmentsLambda/Resource",
    "aws:asset:path": "asset.27e8e0cb49998792b50ce4ec1a17809cecdf52a4fdd62941d4009842747b024c",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "ListAppointmentsLambdaLogGroup30BEB1B6": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "ListAppointmentsLambda0A2CE31A"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "InfraStack/ListAppointmentsLambda/LogGroup/Resource"
   }
  },
  "HttpApiF5A9A8A7": {
   "Type": "AWS::ApiGatewayV2::Api",
   "Properties": {
    "CorsConfiguration": {
     "AllowHeaders": [
      "*"
     ],
     "AllowMethods": [
      "GET",
      "POST",
      "PATCH",
      "OPTIONS"
     ],
     "AllowOrigins": [
      "*"
     ],
     "MaxAge": 864000
    },
    "Name": "PsychiatristSchedulerApi",
    "ProtocolType": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/HttpApi/Resource"
   }
  },
  "HttpApiDefaultStage3EEB07D6": {
   "Type": "AWS::ApiGatewayV2::Stage",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AutoDeploy": true,
    "StageName": "$default"
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/HttpApi/DefaultStage/Resource"
   }
  },
  "HttpApiGETpsychiatristsListPsychiatristsIntegration8E70F29B": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "ListPsychiatristsLambda38DC8D6B",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/HttpApi/GET--psychiatrists/ListPsychiatristsIntegration/Resource"
   }
  },
  "HttpApiGETpsychiatristsListPsychiatristsIntegrationPermission83CEFB4B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ListPsychiatristsLambda38DC8D6B",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "HttpApiF5A9A8A7"
       },
       "/*/*/psychiatrists"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/HttpApi/GET--psychiatrists/ListPsychiatristsIntegration-Permission"
   }
  },
  "HttpApiGETpsychiatristsC67914AE": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "GET /psychiatrists",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "HttpApiGETpsychiatristsListPsychiatristsIntegration8E70F29B"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/HttpApi/GET--psychiatrists/Resource"
   }
  },
  "HttpApiPOSTpsychiatristsCreatePsychiatristIntegrationD9252892": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "CreatePsychiatristLambdaB7BEEAAD",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/HttpApi/POST--psychiatrists/CreatePsychiatristIntegration/Resource"
   }
  },
  "HttpApiPOSTpsychiatristsCreatePsychiatristIntegrationPermissionA1D29B86": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CreatePsychiatristLambdaB7BEEAAD",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "HttpApiF5A9A8A7"
       },
       "/*/*/psychiatrists"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/HttpApi/POST--psychiatrists/CreatePsychiatristIntegration-Permission"
   }
  },
  "HttpApiPOSTpsychiatrists3EBE9A8D": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "POST /psychiatrists",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "HttpApiPOSTpsychiatristsCreatePsychiatristIntegrationD9252892"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/HttpApi/POST--psychiatrists/Resource"
   }
  },
  "HttpApiGETpsychiatristsidavailabilityAvailabilityIntegration99AD336D": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "AvailabilityLambda98535654",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/HttpApi/GET--psychiatrists--{id}--availability/AvailabilityIntegration/Resource"
   }
  },
  "HttpApiGETpsychiatristsidavailabilityAvailabilityIntegrationPermission7CEF8214": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AvailabilityLambda98535654",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "HttpApiF5A9A8A7"
       },
       "/*/*/psychiatrists/{id}/availability"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/HttpApi/GET--psychiatrists--{id}--availability/AvailabilityIntegration-Permission"
   }
  },
  "HttpApiGETpsychiatristsidavailability012750C7": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "GET /psychiatrists/{id}/availability",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "HttpApiGETpsychiatristsidavailabilityAvailabilityIntegration99AD336D"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/HttpApi/GET--psychiatrists--{id}--availability/Resource"
   }
  },
  "HttpApiPOSTappointmentsCreateAppointmentIntegrationE0249207": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "CreateAppointmentLambdaF2AD135A",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/HttpApi/POST--appointments/CreateAppointmentIntegration/Resource"
   }
  },
  "HttpApiPOSTappointmentsCreateAppointmentIntegrationPermissionF1D4C9CF": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CreateAppointmentLambdaF2AD135A",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "HttpApiF5A9A8A7"
       },
       "/*/*/appointments"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/HttpApi/POST--appointments/CreateAppointmentIntegration-Permission"
   }
  },
  "HttpApiPOSTappointments72848665": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "POST /appointments",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "HttpApiPOSTappointmentsCreateAppointmentIntegrationE0249207"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/HttpApi/POST--appointments/Resource"
   }
  },
  "HttpApiPATCHappointmentsidapproveApproveAppointmentIntegrationEFEA639F": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "ApproveAppointmentLambdaCE33AABA",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/HttpApi/PATCH--appointments--{id}--approve/ApproveAppointmentIntegration/Resource"
   }
  },
  "HttpApiPATCHappointmentsidapproveApproveAppointmentIntegrationPermissionC6530131": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ApproveAppointmentLambdaCE33AABA",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "HttpApiF5A9A8A7"
       },
       "/*/*/appointments/{id}/approve"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/HttpApi/PATCH--appointments--{id}--approve/ApproveAppointmentIntegration-Permission"
   }
  },
  "HttpApiPATCHappointmentsidapprove1180D262": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "PATCH /appointments/{id}/approve",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "HttpApiPATCHappointmentsidapproveApproveAppointmentIntegrationEFEA639F"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/HttpApi/PATCH--appointments--{id}--approve/Resource"
   }
  },
  "HttpApiPATCHappointmentsidrejectRejectAppointmentIntegrationD5577DF3": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "RejectAppointmentLambdaDB5D26B0",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/HttpApi/PATCH--appointments--{id}--reject/RejectAppointmentIntegration/Resource"
   }
  },
  "HttpApiPATCHappointmentsidrejectRejectAppointmentIntegrationPermission8DEEF257": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "RejectAppointmentLambdaDB5D26B0",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "HttpApiF5A9A8A7"
       },
       "/*/*/appointments/{id}/reject"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/HttpApi/PATCH--appointments--{id}--reject/RejectAppointmentIntegration-Permission"
   }
  },
  "HttpApiPATCHappointmentsidrejectFC9771C8": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "PATCH /appointments/{id}/reject",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "HttpApiPATCHappointmentsidrejectRejectAppointmentIntegrationD5577DF3"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/HttpApi/PATCH--appointments--{id}--reject/Resource"
   }
  },
  "HttpApiGETappointmentsListAppointmentsIntegration97A6944F": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "ListAppointmentsLambda0A2CE31A",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/HttpApi/GET--appointments/ListAppointmentsIntegration/Resource"
   }
  },
  "HttpApiGETappointmentsListAppointmentsIntegrationPermission8455A952": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ListAppointmentsLambda0A2CE31A",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "HttpApiF5A9A8A7"
       },
       "/*/*/appointments"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/HttpApi/GET--appointments/ListAppointmentsIntegration-Permission"
   }
  },
  "HttpApiGETappointments29E527FC": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "GET /appointments",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "HttpApiGETappointmentsListAppointmentsIntegration97A6944F"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/HttpApi/GET--appointments/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/+1X3W/bIBD/W8pjRVibvlR9c7Oti9a1VRLtJYqqC1xdEgwW4GYW8v8+ge2sU6Ws2qR9aH6wgB/38bsznI4xG5+esJMj2LkRF9uRkmsW5h74lsLO3QdRayiMWLOwgLXCZSAlWC+9NPoj1uQiEA0FkgtyTCjxdRmnc9JQ4oz1hyXWUimp809GROhudvt5Op/e3rx7SyixCGICJXDp6051Z6XH77CGBgJCXCmzBjVHbrQAW0+1wC/kYhmIjLObb85fyby0ZoM8yi1aNLu+Js3qN3tb0cmDTjlvqIJiLeBeG4Ebx27S8L7SSWsZCGpv+yw9ghYKbbeylfZy7xb1k7RGF6h9h/A29ymVMb6ftfQrugOLgcV/wWJFJRQszEwqo+BcVaC4TLWhtFJzWYLKODfV3nUrExWydNc7GqQADTmKO6Mkl+hS+XmO1ZntZPuqtTB3vYtWIup0u94Df5xqJTXu98gxecXmEMIQwhDCEMLfEULqmCI12uIR3SssTNx5YeclLMTcg8dYtl1PaTD0DxpKx6E9CQ11Z/fgHHrHsjhQd8YuK75FfwkOl6uuw2Zh8qD7xjqpoy2kc9LohiqTOxauTX5lTVUuA1HddN/zRyZ/EEwB9/waCqXMweMO6qcxCx+8L7NSpjtx4Es2slLSKD/3kOOyR9Mq4TNTeTxkaZXEptpjbiE9Un7k8plse4srj01DZ+hMZflBZ62N9FsjRanzaOG28mXlGxrfTGzj3jydnrPxCTs/2jgpR12nxmbt+BV4To2HBQ8AAA=="
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "ApiEndpoint": {
   "Value": {
    "Fn::GetAtt": [
     "HttpApiF5A9A8A7",
     "ApiEndpoint"
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}